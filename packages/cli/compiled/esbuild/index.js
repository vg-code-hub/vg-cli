(function(){"use strict";var e={625:function(e,t,r){var n=Object.create;var l=Object.defineProperty;var a=Object.getOwnPropertyDescriptor;var i=Object.getOwnPropertyNames;var o=Object.getPrototypeOf;var s=Object.prototype.hasOwnProperty;var __export=(e,t)=>{for(var r in t)l(e,r,{get:t[r],enumerable:true})};var __copyProps=(e,t,r,n)=>{if(t&&typeof t==="object"||typeof t==="function"){for(let o of i(t))if(!s.call(e,o)&&o!==r)l(e,o,{get:()=>t[o],enumerable:!(n=a(t,o))||n.enumerable})}return e};var __toESM=(e,t,r)=>(r=e!=null?n(o(e)):{},__copyProps(t||!e||!e.__esModule?l(r,"default",{value:e,enumerable:true}):r,e));var __toCommonJS=e=>__copyProps(l({},"__esModule",{value:true}),e);var u={};__export(u,{analyzeMetafile:()=>analyzeMetafile,analyzeMetafileSync:()=>analyzeMetafileSync,build:()=>build,buildSync:()=>buildSync,context:()=>context,default:()=>U,formatMessages:()=>formatMessages,formatMessagesSync:()=>formatMessagesSync,initialize:()=>initialize,transform:()=>transform,transformSync:()=>transformSync,version:()=>T});e.exports=__toCommonJS(u);function encodePacket(e){let visit=e=>{if(e===null){t.write8(0)}else if(typeof e==="boolean"){t.write8(1);t.write8(+e)}else if(typeof e==="number"){t.write8(2);t.write32(e|0)}else if(typeof e==="string"){t.write8(3);t.write(f(e))}else if(e instanceof Uint8Array){t.write8(4);t.write(e)}else if(e instanceof Array){t.write8(5);t.write32(e.length);for(let t of e){visit(t)}}else{let r=Object.keys(e);t.write8(6);t.write32(r.length);for(let n of r){t.write(f(n));visit(e[n])}}};let t=new c;t.write32(0);t.write32(e.id<<1|+!e.isRequest);visit(e.value);writeUInt32LE(t.buf,t.len-4,0);return t.buf.subarray(0,t.len)}function decodePacket(e){let visit=()=>{switch(t.read8()){case 0:return null;case 1:return!!t.read8();case 2:return t.read32();case 3:return g(t.read());case 4:return t.read();case 5:{let e=t.read32();let r=[];for(let t=0;t<e;t++){r.push(visit())}return r}case 6:{let e=t.read32();let r={};for(let n=0;n<e;n++){r[g(t.read())]=visit()}return r}default:throw new Error("Invalid packet")}};let t=new c(e);let r=t.read32();let n=(r&1)===0;r>>>=1;let l=visit();if(t.ptr!==e.length){throw new Error("Invalid packet")}return{id:r,isRequest:n,value:l}}var c=class{constructor(e=new Uint8Array(1024)){this.buf=e;this.len=0;this.ptr=0}_write(e){if(this.len+e>this.buf.length){let t=new Uint8Array((this.len+e)*2);t.set(this.buf);this.buf=t}this.len+=e;return this.len-e}write8(e){let t=this._write(1);this.buf[t]=e}write32(e){let t=this._write(4);writeUInt32LE(this.buf,e,t)}write(e){let t=this._write(4+e.length);writeUInt32LE(this.buf,e.length,t);this.buf.set(e,t+4)}_read(e){if(this.ptr+e>this.buf.length){throw new Error("Invalid packet")}this.ptr+=e;return this.ptr-e}read8(){return this.buf[this._read(1)]}read32(){return readUInt32LE(this.buf,this._read(4))}read(){let e=this.read32();let t=new Uint8Array(e);let r=this._read(t.length);t.set(this.buf.subarray(r,r+e));return t}};var f;var g;var d;if(typeof TextEncoder!=="undefined"&&typeof TextDecoder!=="undefined"){let e=new TextEncoder;let t=new TextDecoder;f=t=>e.encode(t);g=e=>t.decode(e);d='new TextEncoder().encode("")'}else if(typeof Buffer!=="undefined"){f=e=>Buffer.from(e);g=e=>{let{buffer:t,byteOffset:r,byteLength:n}=e;return Buffer.from(t,r,n).toString()};d='Buffer.from("")'}else{throw new Error("No UTF-8 codec found")}if(!(f("")instanceof Uint8Array))throw new Error(`Invariant violation: "${d} instanceof Uint8Array" is incorrectly false\n\nThis indicates that your JavaScript environment is broken. You cannot use\nesbuild in this environment because esbuild relies on this invariant. This\nis not a problem with esbuild. You need to fix your environment instead.\n`);function readUInt32LE(e,t){return e[t++]|e[t++]<<8|e[t++]<<16|e[t++]<<24}function writeUInt32LE(e,t,r){e[r++]=t;e[r++]=t>>8;e[r++]=t>>16;e[r++]=t>>24}var p=JSON.stringify;var h="warning";var m="silent";function validateTarget(e){validateStringValue(e,"target");if(e.indexOf(",")>=0)throw new Error(`Invalid target: ${e}`);return e}var canBeAnything=()=>null;var mustBeBoolean=e=>typeof e==="boolean"?null:"a boolean";var mustBeString=e=>typeof e==="string"?null:"a string";var mustBeRegExp=e=>e instanceof RegExp?null:"a RegExp object";var mustBeInteger=e=>typeof e==="number"&&e===(e|0)?null:"an integer";var mustBeFunction=e=>typeof e==="function"?null:"a function";var mustBeArray=e=>Array.isArray(e)?null:"an array";var mustBeObject=e=>typeof e==="object"&&e!==null&&!Array.isArray(e)?null:"an object";var mustBeEntryPoints=e=>typeof e==="object"&&e!==null?null:"an array or an object";var mustBeWebAssemblyModule=e=>e instanceof WebAssembly.Module?null:"a WebAssembly.Module";var mustBeObjectOrNull=e=>typeof e==="object"&&!Array.isArray(e)?null:"an object or null";var mustBeStringOrBoolean=e=>typeof e==="string"||typeof e==="boolean"?null:"a string or a boolean";var mustBeStringOrObject=e=>typeof e==="string"||typeof e==="object"&&e!==null&&!Array.isArray(e)?null:"a string or an object";var mustBeStringOrArray=e=>typeof e==="string"||Array.isArray(e)?null:"a string or an array";var mustBeStringOrUint8Array=e=>typeof e==="string"||e instanceof Uint8Array?null:"a string or a Uint8Array";var mustBeStringOrURL=e=>typeof e==="string"||e instanceof URL?null:"a string or a URL";function getFlag(e,t,r,n){let l=e[r];t[r+""]=true;if(l===void 0)return void 0;let a=n(l);if(a!==null)throw new Error(`${p(r)} must be ${a}`);return l}function checkForInvalidFlags(e,t,r){for(let n in e){if(!(n in t)){throw new Error(`Invalid option ${r}: ${p(n)}`)}}}function validateInitializeOptions(e){let t=Object.create(null);let r=getFlag(e,t,"wasmURL",mustBeStringOrURL);let n=getFlag(e,t,"wasmModule",mustBeWebAssemblyModule);let l=getFlag(e,t,"worker",mustBeBoolean);checkForInvalidFlags(e,t,"in initialize() call");return{wasmURL:r,wasmModule:n,worker:l}}function validateMangleCache(e){let t;if(e!==void 0){t=Object.create(null);for(let r in e){let n=e[r];if(typeof n==="string"||n===false){t[r]=n}else{throw new Error(`Expected ${p(r)} in mangle cache to map to either a string or false`)}}}return t}function pushLogFlags(e,t,r,n,l){let a=getFlag(t,r,"color",mustBeBoolean);let i=getFlag(t,r,"logLevel",mustBeString);let o=getFlag(t,r,"logLimit",mustBeInteger);if(a!==void 0)e.push(`--color=${a}`);else if(n)e.push(`--color=true`);e.push(`--log-level=${i||l}`);e.push(`--log-limit=${o||0}`)}function validateStringValue(e,t,r){if(typeof e!=="string"){throw new Error(`Expected value for ${t}${r!==void 0?" "+p(r):""} to be a string, got ${typeof e} instead`)}return e}function pushCommonFlags(e,t,r){let n=getFlag(t,r,"legalComments",mustBeString);let l=getFlag(t,r,"sourceRoot",mustBeString);let a=getFlag(t,r,"sourcesContent",mustBeBoolean);let i=getFlag(t,r,"target",mustBeStringOrArray);let o=getFlag(t,r,"format",mustBeString);let s=getFlag(t,r,"globalName",mustBeString);let u=getFlag(t,r,"mangleProps",mustBeRegExp);let c=getFlag(t,r,"reserveProps",mustBeRegExp);let f=getFlag(t,r,"mangleQuoted",mustBeBoolean);let g=getFlag(t,r,"minify",mustBeBoolean);let d=getFlag(t,r,"minifySyntax",mustBeBoolean);let h=getFlag(t,r,"minifyWhitespace",mustBeBoolean);let m=getFlag(t,r,"minifyIdentifiers",mustBeBoolean);let w=getFlag(t,r,"drop",mustBeArray);let y=getFlag(t,r,"charset",mustBeString);let v=getFlag(t,r,"treeShaking",mustBeBoolean);let b=getFlag(t,r,"ignoreAnnotations",mustBeBoolean);let F=getFlag(t,r,"jsx",mustBeString);let x=getFlag(t,r,"jsxFactory",mustBeString);let k=getFlag(t,r,"jsxFragment",mustBeString);let E=getFlag(t,r,"jsxImportSource",mustBeString);let $=getFlag(t,r,"jsxDev",mustBeBoolean);let S=getFlag(t,r,"jsxSideEffects",mustBeBoolean);let I=getFlag(t,r,"define",mustBeObject);let M=getFlag(t,r,"logOverride",mustBeObject);let A=getFlag(t,r,"supported",mustBeObject);let C=getFlag(t,r,"pure",mustBeArray);let j=getFlag(t,r,"keepNames",mustBeBoolean);let L=getFlag(t,r,"platform",mustBeString);if(n)e.push(`--legal-comments=${n}`);if(l!==void 0)e.push(`--source-root=${l}`);if(a!==void 0)e.push(`--sources-content=${a}`);if(i){if(Array.isArray(i))e.push(`--target=${Array.from(i).map(validateTarget).join(",")}`);else e.push(`--target=${validateTarget(i)}`)}if(o)e.push(`--format=${o}`);if(s)e.push(`--global-name=${s}`);if(L)e.push(`--platform=${L}`);if(g)e.push("--minify");if(d)e.push("--minify-syntax");if(h)e.push("--minify-whitespace");if(m)e.push("--minify-identifiers");if(y)e.push(`--charset=${y}`);if(v!==void 0)e.push(`--tree-shaking=${v}`);if(b)e.push(`--ignore-annotations`);if(w)for(let t of w)e.push(`--drop:${validateStringValue(t,"drop")}`);if(u)e.push(`--mangle-props=${u.source}`);if(c)e.push(`--reserve-props=${c.source}`);if(f!==void 0)e.push(`--mangle-quoted=${f}`);if(F)e.push(`--jsx=${F}`);if(x)e.push(`--jsx-factory=${x}`);if(k)e.push(`--jsx-fragment=${k}`);if(E)e.push(`--jsx-import-source=${E}`);if($)e.push(`--jsx-dev`);if(S)e.push(`--jsx-side-effects`);if(I){for(let t in I){if(t.indexOf("=")>=0)throw new Error(`Invalid define: ${t}`);e.push(`--define:${t}=${validateStringValue(I[t],"define",t)}`)}}if(M){for(let t in M){if(t.indexOf("=")>=0)throw new Error(`Invalid log override: ${t}`);e.push(`--log-override:${t}=${validateStringValue(M[t],"log override",t)}`)}}if(A){for(let t in A){if(t.indexOf("=")>=0)throw new Error(`Invalid supported: ${t}`);const r=A[t];if(typeof r!=="boolean")throw new Error(`Expected value for supported ${p(t)} to be a boolean, got ${typeof r} instead`);e.push(`--supported:${t}=${r}`)}}if(C)for(let t of C)e.push(`--pure:${validateStringValue(t,"pure")}`);if(j)e.push(`--keep-names`)}function flagsForBuildOptions(e,t,r,n,l){var a;let i=[];let o=[];let s=Object.create(null);let u=null;let c=null;pushLogFlags(i,t,s,r,n);pushCommonFlags(i,t,s);let g=getFlag(t,s,"sourcemap",mustBeStringOrBoolean);let d=getFlag(t,s,"bundle",mustBeBoolean);let p=getFlag(t,s,"splitting",mustBeBoolean);let h=getFlag(t,s,"preserveSymlinks",mustBeBoolean);let m=getFlag(t,s,"metafile",mustBeBoolean);let w=getFlag(t,s,"outfile",mustBeString);let y=getFlag(t,s,"outdir",mustBeString);let v=getFlag(t,s,"outbase",mustBeString);let b=getFlag(t,s,"tsconfig",mustBeString);let F=getFlag(t,s,"resolveExtensions",mustBeArray);let x=getFlag(t,s,"nodePaths",mustBeArray);let k=getFlag(t,s,"mainFields",mustBeArray);let E=getFlag(t,s,"conditions",mustBeArray);let $=getFlag(t,s,"external",mustBeArray);let S=getFlag(t,s,"packages",mustBeString);let I=getFlag(t,s,"alias",mustBeObject);let M=getFlag(t,s,"loader",mustBeObject);let A=getFlag(t,s,"outExtension",mustBeObject);let C=getFlag(t,s,"publicPath",mustBeString);let j=getFlag(t,s,"entryNames",mustBeString);let L=getFlag(t,s,"chunkNames",mustBeString);let O=getFlag(t,s,"assetNames",mustBeString);let P=getFlag(t,s,"inject",mustBeArray);let D=getFlag(t,s,"banner",mustBeObject);let _=getFlag(t,s,"footer",mustBeObject);let T=getFlag(t,s,"entryPoints",mustBeEntryPoints);let N=getFlag(t,s,"absWorkingDir",mustBeString);let R=getFlag(t,s,"stdin",mustBeObject);let z=(a=getFlag(t,s,"write",mustBeBoolean))!=null?a:l;let W=getFlag(t,s,"allowOverwrite",mustBeBoolean);let U=getFlag(t,s,"mangleCache",mustBeObject);s.plugins=true;checkForInvalidFlags(t,s,`in ${e}() call`);if(g)i.push(`--sourcemap${g===true?"":`=${g}`}`);if(d)i.push("--bundle");if(W)i.push("--allow-overwrite");if(p)i.push("--splitting");if(h)i.push("--preserve-symlinks");if(m)i.push(`--metafile`);if(w)i.push(`--outfile=${w}`);if(y)i.push(`--outdir=${y}`);if(v)i.push(`--outbase=${v}`);if(b)i.push(`--tsconfig=${b}`);if(S)i.push(`--packages=${S}`);if(F){let e=[];for(let t of F){validateStringValue(t,"resolve extension");if(t.indexOf(",")>=0)throw new Error(`Invalid resolve extension: ${t}`);e.push(t)}i.push(`--resolve-extensions=${e.join(",")}`)}if(C)i.push(`--public-path=${C}`);if(j)i.push(`--entry-names=${j}`);if(L)i.push(`--chunk-names=${L}`);if(O)i.push(`--asset-names=${O}`);if(k){let e=[];for(let t of k){validateStringValue(t,"main field");if(t.indexOf(",")>=0)throw new Error(`Invalid main field: ${t}`);e.push(t)}i.push(`--main-fields=${e.join(",")}`)}if(E){let e=[];for(let t of E){validateStringValue(t,"condition");if(t.indexOf(",")>=0)throw new Error(`Invalid condition: ${t}`);e.push(t)}i.push(`--conditions=${e.join(",")}`)}if($)for(let e of $)i.push(`--external:${validateStringValue(e,"external")}`);if(I){for(let e in I){if(e.indexOf("=")>=0)throw new Error(`Invalid package name in alias: ${e}`);i.push(`--alias:${e}=${validateStringValue(I[e],"alias",e)}`)}}if(D){for(let e in D){if(e.indexOf("=")>=0)throw new Error(`Invalid banner file type: ${e}`);i.push(`--banner:${e}=${validateStringValue(D[e],"banner",e)}`)}}if(_){for(let e in _){if(e.indexOf("=")>=0)throw new Error(`Invalid footer file type: ${e}`);i.push(`--footer:${e}=${validateStringValue(_[e],"footer",e)}`)}}if(P)for(let e of P)i.push(`--inject:${validateStringValue(e,"inject")}`);if(M){for(let e in M){if(e.indexOf("=")>=0)throw new Error(`Invalid loader extension: ${e}`);i.push(`--loader:${e}=${validateStringValue(M[e],"loader",e)}`)}}if(A){for(let e in A){if(e.indexOf("=")>=0)throw new Error(`Invalid out extension: ${e}`);i.push(`--out-extension:${e}=${validateStringValue(A[e],"out extension",e)}`)}}if(T){if(Array.isArray(T)){for(let e=0,t=T.length;e<t;e++){let t=T[e];if(typeof t==="object"&&t!==null){let r=Object.create(null);let n=getFlag(t,r,"in",mustBeString);let l=getFlag(t,r,"out",mustBeString);checkForInvalidFlags(t,r,"in entry point at index "+e);if(n===void 0)throw new Error('Missing property "in" for entry point at index '+e);if(l===void 0)throw new Error('Missing property "out" for entry point at index '+e);o.push([l,n])}else{o.push(["",validateStringValue(t,"entry point at index "+e)])}}}else{for(let e in T){o.push([e,validateStringValue(T[e],"entry point",e)])}}}if(R){let e=Object.create(null);let t=getFlag(R,e,"contents",mustBeStringOrUint8Array);let r=getFlag(R,e,"resolveDir",mustBeString);let n=getFlag(R,e,"sourcefile",mustBeString);let l=getFlag(R,e,"loader",mustBeString);checkForInvalidFlags(R,e,'in "stdin" object');if(n)i.push(`--sourcefile=${n}`);if(l)i.push(`--loader=${l}`);if(r)c=r;if(typeof t==="string")u=f(t);else if(t instanceof Uint8Array)u=t}let V=[];if(x){for(let e of x){e+="";V.push(e)}}return{entries:o,flags:i,write:z,stdinContents:u,stdinResolveDir:c,absWorkingDir:N,nodePaths:V,mangleCache:validateMangleCache(U)}}function flagsForTransformOptions(e,t,r,n){let l=[];let a=Object.create(null);pushLogFlags(l,t,a,r,n);pushCommonFlags(l,t,a);let i=getFlag(t,a,"sourcemap",mustBeStringOrBoolean);let o=getFlag(t,a,"tsconfigRaw",mustBeStringOrObject);let s=getFlag(t,a,"sourcefile",mustBeString);let u=getFlag(t,a,"loader",mustBeString);let c=getFlag(t,a,"banner",mustBeString);let f=getFlag(t,a,"footer",mustBeString);let g=getFlag(t,a,"mangleCache",mustBeObject);checkForInvalidFlags(t,a,`in ${e}() call`);if(i)l.push(`--sourcemap=${i===true?"external":i}`);if(o)l.push(`--tsconfig-raw=${typeof o==="string"?o:JSON.stringify(o)}`);if(s)l.push(`--sourcefile=${s}`);if(u)l.push(`--loader=${u}`);if(c)l.push(`--banner=${c}`);if(f)l.push(`--footer=${f}`);return{flags:l,mangleCache:validateMangleCache(g)}}function createChannel(e){const t={};const r={didClose:false,reason:""};let n={};let l=0;let a=0;let i=new Uint8Array(16*1024);let o=0;let readFromStdout=e=>{let t=o+e.length;if(t>i.length){let e=new Uint8Array(t*2);e.set(i);i=e}i.set(e,o);o+=e.length;let r=0;while(r+4<=o){let e=readUInt32LE(i,r);if(r+4+e>o){break}r+=4;handleIncomingPacket(i.subarray(r,r+e));r+=e}if(r>0){i.copyWithin(0,r,o);o-=r}};let afterClose=e=>{r.didClose=true;if(e)r.reason=": "+(e.message||e);const t="The service was stopped"+r.reason;for(let e in n){n[e](t,null)}n={}};let sendRequest=(t,a,i)=>{if(r.didClose)return i("The service is no longer running"+r.reason,null);let o=l++;n[o]=(e,r)=>{try{i(e,r)}finally{if(t)t.unref()}};if(t)t.ref();e.writeToStdin(encodePacket({id:o,isRequest:true,value:a}))};let sendResponse=(t,n)=>{if(r.didClose)throw new Error("The service is no longer running"+r.reason);e.writeToStdin(encodePacket({id:t,isRequest:false,value:n}))};let handleRequest=async(r,n)=>{try{if(n.command==="ping"){sendResponse(r,{});return}if(typeof n.key==="number"){const e=t[n.key];if(e){const t=e[n.command];if(t){await t(r,n);return}}}throw new Error(`Invalid command: `+n.command)}catch(t){sendResponse(r,{errors:[extractErrorMessageV8(t,e,null,void 0,"")]})}};let s=true;let handleIncomingPacket=e=>{if(s){s=false;let t=String.fromCharCode(...e);if(t!=="0.17.19"){throw new Error(`Cannot start service: Host version "${"0.17.19"}" does not match binary version ${p(t)}`)}return}let t=decodePacket(e);if(t.isRequest){handleRequest(t.id,t.value)}else{let e=n[t.id];delete n[t.id];if(t.value.error)e(t.value.error,{});else e(null,t.value)}};let buildOrContext=({callName:r,refs:n,options:l,isTTY:i,defaultWD:o,callback:s})=>{let u=0;const c=a++;const f={};const g={ref(){if(++u===1){if(n)n.ref()}},unref(){if(--u===0){delete t[c];if(n)n.unref()}}};t[c]=f;g.ref();buildOrContextImpl(r,c,sendRequest,sendResponse,g,e,f,l,i,o,((e,t)=>{try{s(e,t)}finally{g.unref()}}))};let transform2=({callName:t,refs:r,input:n,options:l,isTTY:a,fs:i,callback:o})=>{const s=createObjectStash();let start=u=>{try{if(typeof n!=="string"&&!(n instanceof Uint8Array))throw new Error('The input to "transform" must be a string or a Uint8Array');let{flags:e,mangleCache:c}=flagsForTransformOptions(t,l,a,m);let g={command:"transform",flags:e,inputFS:u!==null,input:u!==null?f(u):typeof n==="string"?f(n):n};if(c)g.mangleCache=c;sendRequest(r,g,((e,t)=>{if(e)return o(new Error(e),null);let r=replaceDetailsInMessages(t.errors,s);let n=replaceDetailsInMessages(t.warnings,s);let l=1;let next=()=>{if(--l===0){let e={warnings:n,code:t.code,map:t.map,mangleCache:void 0,legalComments:void 0};if("legalComments"in t)e.legalComments=t==null?void 0:t.legalComments;if(t.mangleCache)e.mangleCache=t==null?void 0:t.mangleCache;o(null,e)}};if(r.length>0)return o(failureErrorWithLog("Transform failed",r,n),null);if(t.codeFS){l++;i.readFile(t.code,((e,r)=>{if(e!==null){o(e,null)}else{t.code=r;next()}}))}if(t.mapFS){l++;i.readFile(t.map,((e,r)=>{if(e!==null){o(e,null)}else{t.map=r;next()}}))}next()}))}catch(t){let n=[];try{pushLogFlags(n,l,{},a,m)}catch{}const i=extractErrorMessageV8(t,e,s,void 0,"");sendRequest(r,{command:"error",flags:n,error:i},(()=>{i.detail=s.load(i.detail);o(failureErrorWithLog("Transform failed",[i],[]),null)}))}};if((typeof n==="string"||n instanceof Uint8Array)&&n.length>1024*1024){let e=start;start=()=>i.writeFile(n,e)}start(null)};let formatMessages2=({callName:e,refs:t,messages:r,options:n,callback:l})=>{let a=sanitizeMessages(r,"messages",null,"");if(!n)throw new Error(`Missing second argument in ${e}() call`);let i={};let o=getFlag(n,i,"kind",mustBeString);let s=getFlag(n,i,"color",mustBeBoolean);let u=getFlag(n,i,"terminalWidth",mustBeInteger);checkForInvalidFlags(n,i,`in ${e}() call`);if(o===void 0)throw new Error(`Missing "kind" in ${e}() call`);if(o!=="error"&&o!=="warning")throw new Error(`Expected "kind" to be "error" or "warning" in ${e}() call`);let c={command:"format-msgs",messages:a,isWarning:o==="warning"};if(s!==void 0)c.color=s;if(u!==void 0)c.terminalWidth=u;sendRequest(t,c,((e,t)=>{if(e)return l(new Error(e),null);l(null,t.messages)}))};let analyzeMetafile2=({callName:e,refs:t,metafile:r,options:n,callback:l})=>{if(n===void 0)n={};let a={};let i=getFlag(n,a,"color",mustBeBoolean);let o=getFlag(n,a,"verbose",mustBeBoolean);checkForInvalidFlags(n,a,`in ${e}() call`);let s={command:"analyze-metafile",metafile:r};if(i!==void 0)s.color=i;if(o!==void 0)s.verbose=o;sendRequest(t,s,((e,t)=>{if(e)return l(new Error(e),null);l(null,t.result)}))};return{readFromStdout:readFromStdout,afterClose:afterClose,service:{buildOrContext:buildOrContext,transform:transform2,formatMessages:formatMessages2,analyzeMetafile:analyzeMetafile2}}}function buildOrContextImpl(e,t,r,n,l,a,i,o,s,u,c){const f=createObjectStash();const d=e==="context";const handleError=(e,t)=>{const n=[];try{pushLogFlags(n,o,{},s,h)}catch{}const i=extractErrorMessageV8(e,a,f,void 0,t);r(l,{command:"error",flags:n,error:i},(()=>{i.detail=f.load(i.detail);c(failureErrorWithLog(d?"Context failed":"Build failed",[i],[]),null)}))};let p;if(typeof o==="object"){const e=o.plugins;if(e!==void 0){if(!Array.isArray(e))return handleError(new Error(`"plugins" must be an array`),"");p=e}}if(p&&p.length>0){if(a.isSync)return handleError(new Error("Cannot use plugins in synchronous API calls"),"");handlePlugins(t,r,n,l,a,i,o,p,f).then((e=>{if(!e.ok)return handleError(e.error,e.pluginName);try{buildOrContextContinue(e.requestPlugins,e.runOnEndCallbacks,e.scheduleOnDisposeCallbacks)}catch(e){handleError(e,"")}}),(e=>handleError(e,"")));return}try{buildOrContextContinue(null,((e,t)=>t([],[])),(()=>{}))}catch(e){handleError(e,"")}function buildOrContextContinue(p,m,w){const y=a.hasFS;const{entries:v,flags:b,write:F,stdinContents:x,stdinResolveDir:k,absWorkingDir:E,nodePaths:$,mangleCache:S}=flagsForBuildOptions(e,o,s,h,y);if(F&&!a.hasFS)throw new Error(`The "write" option is unavailable in this environment`);const I={command:"build",key:t,entries:v,flags:b,write:F,stdinContents:x,stdinResolveDir:k,absWorkingDir:E||u,nodePaths:$,context:d};if(p)I.plugins=p;if(S)I.mangleCache=S;const buildResponseToResult=(e,t)=>{const r={errors:replaceDetailsInMessages(e.errors,f),warnings:replaceDetailsInMessages(e.warnings,f),outputFiles:void 0,metafile:void 0,mangleCache:void 0};const n=r.errors.slice();const l=r.warnings.slice();if(e.outputFiles)r.outputFiles=e.outputFiles.map(convertOutputFiles);if(e.metafile)r.metafile=JSON.parse(e.metafile);if(e.mangleCache)r.mangleCache=e.mangleCache;if(e.writeToStdout!==void 0)console.log(g(e.writeToStdout).replace(/\n$/,""));m(r,((e,a)=>{if(n.length>0||e.length>0){const r=failureErrorWithLog("Build failed",n.concat(e),l.concat(a));return t(r,null,e,a)}t(null,r,e,a)}))};let M;let A;if(d)i["on-end"]=(e,t)=>new Promise((r=>{buildResponseToResult(t,((t,l,a,i)=>{const o={errors:a,warnings:i};if(A)A(t,l);M=void 0;A=void 0;n(e,o);r()}))}));r(l,I,((e,o)=>{if(e)return c(new Error(e),null);if(!d){return buildResponseToResult(o,((e,t)=>{w();return c(e,t)}))}if(o.errors.length>0){return c(failureErrorWithLog("Context failed",o.errors,o.warnings),null)}let s=false;const u={rebuild:()=>{if(!M)M=new Promise(((e,n)=>{let a;A=(t,r)=>{if(!a)a=()=>t?n(t):e(r)};const triggerAnotherBuild=()=>{const e={command:"rebuild",key:t};r(l,e,((e,t)=>{if(e){n(new Error(e))}else if(a){a()}else{triggerAnotherBuild()}}))};triggerAnotherBuild()}));return M},watch:(e={})=>new Promise(((n,i)=>{if(!a.hasFS)throw new Error(`Cannot use the "watch" API in this environment`);const o={};checkForInvalidFlags(e,o,`in watch() call`);const s={command:"watch",key:t};r(l,s,(e=>{if(e)i(new Error(e));else n(void 0)}))})),serve:(e={})=>new Promise(((o,s)=>{if(!a.hasFS)throw new Error(`Cannot use the "serve" API in this environment`);const u={};const c=getFlag(e,u,"port",mustBeInteger);const f=getFlag(e,u,"host",mustBeString);const g=getFlag(e,u,"servedir",mustBeString);const d=getFlag(e,u,"keyfile",mustBeString);const p=getFlag(e,u,"certfile",mustBeString);const h=getFlag(e,u,"onRequest",mustBeFunction);checkForInvalidFlags(e,u,`in serve() call`);const m={command:"serve",key:t,onRequest:!!h};if(c!==void 0)m.port=c;if(f!==void 0)m.host=f;if(g!==void 0)m.servedir=g;if(d!==void 0)m.keyfile=d;if(p!==void 0)m.certfile=p;r(l,m,((e,t)=>{if(e)return s(new Error(e));if(h){i["serve-request"]=(e,t)=>{h(t.args);n(e,{})}}o(t)}))})),cancel:()=>new Promise((e=>{if(s)return e();const n={command:"cancel",key:t};r(l,n,(()=>{e()}))})),dispose:()=>new Promise((e=>{if(s)return e();s=true;const n={command:"dispose",key:t};r(l,n,(()=>{e();w();l.unref()}))}))};l.ref();c(null,u)}))}}var handlePlugins=async(e,t,r,n,l,a,i,o,s)=>{let u=[];let c=[];let g={};let d={};let h=[];let m=0;let w=0;let y=[];let v=false;o=[...o];for(let r of o){let a={};if(typeof r!=="object")throw new Error(`Plugin at index ${w} must be an object`);const o=getFlag(r,a,"name",mustBeString);if(typeof o!=="string"||o==="")throw new Error(`Plugin at index ${w} is missing a name`);try{let f=getFlag(r,a,"setup",mustBeFunction);if(typeof f!=="function")throw new Error(`Plugin is missing a setup function`);checkForInvalidFlags(r,a,`on plugin ${p(o)}`);let b={name:o,onStart:false,onEnd:false,onResolve:[],onLoad:[]};w++;let resolve=(r,l={})=>{if(!v)throw new Error('Cannot call "resolve" before plugin setup has completed');if(typeof r!=="string")throw new Error(`The path to resolve must be a string`);let a=Object.create(null);let i=getFlag(l,a,"pluginName",mustBeString);let u=getFlag(l,a,"importer",mustBeString);let c=getFlag(l,a,"namespace",mustBeString);let f=getFlag(l,a,"resolveDir",mustBeString);let g=getFlag(l,a,"kind",mustBeString);let d=getFlag(l,a,"pluginData",canBeAnything);checkForInvalidFlags(l,a,"in resolve() call");return new Promise(((l,a)=>{const p={command:"resolve",path:r,key:e,pluginName:o};if(i!=null)p.pluginName=i;if(u!=null)p.importer=u;if(c!=null)p.namespace=c;if(f!=null)p.resolveDir=f;if(g!=null)p.kind=g;else throw new Error(`Must specify "kind" when calling "resolve"`);if(d!=null)p.pluginData=s.store(d);t(n,p,((e,t)=>{if(e!==null)a(new Error(e));else l({errors:replaceDetailsInMessages(t.errors,s),warnings:replaceDetailsInMessages(t.warnings,s),path:t.path,external:t.external,sideEffects:t.sideEffects,namespace:t.namespace,suffix:t.suffix,pluginData:s.load(t.pluginData)})}))}))};let F=f({initialOptions:i,resolve:resolve,onStart(e){let t=`This error came from the "onStart" callback registered here:`;let r=extractCallerV8(new Error(t),l,"onStart");u.push({name:o,callback:e,note:r});b.onStart=true},onEnd(e){let t=`This error came from the "onEnd" callback registered here:`;let r=extractCallerV8(new Error(t),l,"onEnd");c.push({name:o,callback:e,note:r});b.onEnd=true},onResolve(e,t){let r=`This error came from the "onResolve" callback registered here:`;let n=extractCallerV8(new Error(r),l,"onResolve");let a={};let i=getFlag(e,a,"filter",mustBeRegExp);let s=getFlag(e,a,"namespace",mustBeString);checkForInvalidFlags(e,a,`in onResolve() call for plugin ${p(o)}`);if(i==null)throw new Error(`onResolve() call is missing a filter`);let u=m++;g[u]={name:o,callback:t,note:n};b.onResolve.push({id:u,filter:i.source,namespace:s||""})},onLoad(e,t){let r=`This error came from the "onLoad" callback registered here:`;let n=extractCallerV8(new Error(r),l,"onLoad");let a={};let i=getFlag(e,a,"filter",mustBeRegExp);let s=getFlag(e,a,"namespace",mustBeString);checkForInvalidFlags(e,a,`in onLoad() call for plugin ${p(o)}`);if(i==null)throw new Error(`onLoad() call is missing a filter`);let u=m++;d[u]={name:o,callback:t,note:n};b.onLoad.push({id:u,filter:i.source,namespace:s||""})},onDispose(e){h.push(e)},esbuild:l.esbuild});if(F)await F;y.push(b)}catch(e){return{ok:false,error:e,pluginName:o}}}a["on-start"]=async(e,t)=>{let n={errors:[],warnings:[]};await Promise.all(u.map((async({name:e,callback:t,note:r})=>{try{let r=await t();if(r!=null){if(typeof r!=="object")throw new Error(`Expected onStart() callback in plugin ${p(e)} to return an object`);let t={};let l=getFlag(r,t,"errors",mustBeArray);let a=getFlag(r,t,"warnings",mustBeArray);checkForInvalidFlags(r,t,`from onStart() callback in plugin ${p(e)}`);if(l!=null)n.errors.push(...sanitizeMessages(l,"errors",s,e));if(a!=null)n.warnings.push(...sanitizeMessages(a,"warnings",s,e))}}catch(t){n.errors.push(extractErrorMessageV8(t,l,s,r&&r(),e))}})));r(e,n)};a["on-resolve"]=async(e,t)=>{let n={},a="",i,o;for(let e of t.ids){try{({name:a,callback:i,note:o}=g[e]);let r=await i({path:t.path,importer:t.importer,namespace:t.namespace,resolveDir:t.resolveDir,kind:t.kind,pluginData:s.load(t.pluginData)});if(r!=null){if(typeof r!=="object")throw new Error(`Expected onResolve() callback in plugin ${p(a)} to return an object`);let t={};let l=getFlag(r,t,"pluginName",mustBeString);let i=getFlag(r,t,"path",mustBeString);let o=getFlag(r,t,"namespace",mustBeString);let u=getFlag(r,t,"suffix",mustBeString);let c=getFlag(r,t,"external",mustBeBoolean);let f=getFlag(r,t,"sideEffects",mustBeBoolean);let g=getFlag(r,t,"pluginData",canBeAnything);let d=getFlag(r,t,"errors",mustBeArray);let h=getFlag(r,t,"warnings",mustBeArray);let m=getFlag(r,t,"watchFiles",mustBeArray);let w=getFlag(r,t,"watchDirs",mustBeArray);checkForInvalidFlags(r,t,`from onResolve() callback in plugin ${p(a)}`);n.id=e;if(l!=null)n.pluginName=l;if(i!=null)n.path=i;if(o!=null)n.namespace=o;if(u!=null)n.suffix=u;if(c!=null)n.external=c;if(f!=null)n.sideEffects=f;if(g!=null)n.pluginData=s.store(g);if(d!=null)n.errors=sanitizeMessages(d,"errors",s,a);if(h!=null)n.warnings=sanitizeMessages(h,"warnings",s,a);if(m!=null)n.watchFiles=sanitizeStringArray(m,"watchFiles");if(w!=null)n.watchDirs=sanitizeStringArray(w,"watchDirs");break}}catch(t){n={id:e,errors:[extractErrorMessageV8(t,l,s,o&&o(),a)]};break}}r(e,n)};a["on-load"]=async(e,t)=>{let n={},a="",i,o;for(let e of t.ids){try{({name:a,callback:i,note:o}=d[e]);let r=await i({path:t.path,namespace:t.namespace,suffix:t.suffix,pluginData:s.load(t.pluginData)});if(r!=null){if(typeof r!=="object")throw new Error(`Expected onLoad() callback in plugin ${p(a)} to return an object`);let t={};let l=getFlag(r,t,"pluginName",mustBeString);let i=getFlag(r,t,"contents",mustBeStringOrUint8Array);let o=getFlag(r,t,"resolveDir",mustBeString);let u=getFlag(r,t,"pluginData",canBeAnything);let c=getFlag(r,t,"loader",mustBeString);let g=getFlag(r,t,"errors",mustBeArray);let d=getFlag(r,t,"warnings",mustBeArray);let h=getFlag(r,t,"watchFiles",mustBeArray);let m=getFlag(r,t,"watchDirs",mustBeArray);checkForInvalidFlags(r,t,`from onLoad() callback in plugin ${p(a)}`);n.id=e;if(l!=null)n.pluginName=l;if(i instanceof Uint8Array)n.contents=i;else if(i!=null)n.contents=f(i);if(o!=null)n.resolveDir=o;if(u!=null)n.pluginData=s.store(u);if(c!=null)n.loader=c;if(g!=null)n.errors=sanitizeMessages(g,"errors",s,a);if(d!=null)n.warnings=sanitizeMessages(d,"warnings",s,a);if(h!=null)n.watchFiles=sanitizeStringArray(h,"watchFiles");if(m!=null)n.watchDirs=sanitizeStringArray(m,"watchDirs");break}}catch(t){n={id:e,errors:[extractErrorMessageV8(t,l,s,o&&o(),a)]};break}}r(e,n)};let runOnEndCallbacks=(e,t)=>t([],[]);if(c.length>0){runOnEndCallbacks=(e,t)=>{(async()=>{const r=[];const n=[];for(const{name:t,callback:a,note:i}of c){let o;let u;try{const r=await a(e);if(r!=null){if(typeof r!=="object")throw new Error(`Expected onEnd() callback in plugin ${p(t)} to return an object`);let e={};let n=getFlag(r,e,"errors",mustBeArray);let l=getFlag(r,e,"warnings",mustBeArray);checkForInvalidFlags(r,e,`from onEnd() callback in plugin ${p(t)}`);if(n!=null)o=sanitizeMessages(n,"errors",s,t);if(l!=null)u=sanitizeMessages(l,"warnings",s,t)}}catch(e){o=[extractErrorMessageV8(e,l,s,i&&i(),t)]}if(o){r.push(...o);try{e.errors.push(...o)}catch{}}if(u){n.push(...u);try{e.warnings.push(...u)}catch{}}}t(r,n)})()}}let scheduleOnDisposeCallbacks=()=>{for(const e of h){setTimeout((()=>e()),0)}};v=true;return{ok:true,requestPlugins:y,runOnEndCallbacks:runOnEndCallbacks,scheduleOnDisposeCallbacks:scheduleOnDisposeCallbacks}};function createObjectStash(){const e=new Map;let t=0;return{load(t){return e.get(t)},store(r){if(r===void 0)return-1;const n=t++;e.set(n,r);return n}}}function extractCallerV8(e,t,r){let n;let l=false;return()=>{if(l)return n;l=true;try{let l=(e.stack+"").split("\n");l.splice(1,1);let a=parseStackLinesV8(t,l,r);if(a){n={text:e.message,location:a};return n}}catch{}}}function extractErrorMessageV8(e,t,r,n,l){let a="Internal error";let i=null;try{a=(e&&e.message||e)+""}catch{}try{i=parseStackLinesV8(t,(e.stack+"").split("\n"),"")}catch{}return{id:"",pluginName:l,text:a,location:i,notes:n?[n]:[],detail:r?r.store(e):-1}}function parseStackLinesV8(e,t,r){let n="    at ";if(e.readFileSync&&!t[0].startsWith(n)&&t[1].startsWith(n)){for(let l=1;l<t.length;l++){let a=t[l];if(!a.startsWith(n))continue;a=a.slice(n.length);while(true){let n=/^(?:new |async )?\S+ \((.*)\)$/.exec(a);if(n){a=n[1];continue}n=/^eval at \S+ \((.*)\)(?:, \S+:\d+:\d+)?$/.exec(a);if(n){a=n[1];continue}n=/^(\S+):(\d+):(\d+)$/.exec(a);if(n){let l;try{l=e.readFileSync(n[1],"utf8")}catch{break}let a=l.split(/\r\n|\r|\n|\u2028|\u2029/)[+n[2]-1]||"";let i=+n[3]-1;let o=a.slice(i,i+r.length)===r?r.length:0;return{file:n[1],namespace:"file",line:+n[2],column:f(a.slice(0,i)).length,length:f(a.slice(i,i+o)).length,lineText:a+"\n"+t.slice(1).join("\n"),suggestion:""}}break}}}return null}function failureErrorWithLog(e,t,r){let n=5;let l=t.length<1?"":` with ${t.length} error${t.length<2?"":"s"}:`+t.slice(0,n+1).map(((e,t)=>{if(t===n)return"\n...";if(!e.location)return`\nerror: ${e.text}`;let{file:r,line:l,column:a}=e.location;let i=e.pluginName?`[plugin: ${e.pluginName}] `:"";return`\n${r}:${l}:${a}: ERROR: ${i}${e.text}`})).join("");let a=new Error(`${e}${l}`);a.errors=t;a.warnings=r;return a}function replaceDetailsInMessages(e,t){for(const r of e){r.detail=t.load(r.detail)}return e}function sanitizeLocation(e,t){if(e==null)return null;let r={};let n=getFlag(e,r,"file",mustBeString);let l=getFlag(e,r,"namespace",mustBeString);let a=getFlag(e,r,"line",mustBeInteger);let i=getFlag(e,r,"column",mustBeInteger);let o=getFlag(e,r,"length",mustBeInteger);let s=getFlag(e,r,"lineText",mustBeString);let u=getFlag(e,r,"suggestion",mustBeString);checkForInvalidFlags(e,r,t);return{file:n||"",namespace:l||"",line:a||0,column:i||0,length:o||0,lineText:s||"",suggestion:u||""}}function sanitizeMessages(e,t,r,n){let l=[];let a=0;for(const i of e){let e={};let o=getFlag(i,e,"id",mustBeString);let s=getFlag(i,e,"pluginName",mustBeString);let u=getFlag(i,e,"text",mustBeString);let c=getFlag(i,e,"location",mustBeObjectOrNull);let f=getFlag(i,e,"notes",mustBeArray);let g=getFlag(i,e,"detail",canBeAnything);let d=`in element ${a} of "${t}"`;checkForInvalidFlags(i,e,d);let p=[];if(f){for(const e of f){let t={};let r=getFlag(e,t,"text",mustBeString);let n=getFlag(e,t,"location",mustBeObjectOrNull);checkForInvalidFlags(e,t,d);p.push({text:r||"",location:sanitizeLocation(n,d)})}}l.push({id:o||"",pluginName:s||n,text:u||"",location:sanitizeLocation(c,d),notes:p,detail:r?r.store(g):-1});a++}return l}function sanitizeStringArray(e,t){const r=[];for(const n of e){if(typeof n!=="string")throw new Error(`${p(t)} must be an array of strings`);r.push(n)}return r}function convertOutputFiles({path:e,contents:t}){let r=null;return{path:e,contents:t,get text(){const e=this.contents;if(r===null||e!==t){t=e;r=g(e)}return r}}}var w=r(147);var y=r(37);var v=r(17);var b=process.env.ESBUILD_BINARY_PATH||b;var isValidBinaryPath=e=>!!e&&e!=="/usr/bin/esbuild";var F="@esbuild/darwin-arm64";var x="@esbuild/darwin-x64";var k={"win32 arm64 LE":"@esbuild/win32-arm64","win32 ia32 LE":"@esbuild/win32-ia32","win32 x64 LE":"@esbuild/win32-x64"};var E={"android arm64 LE":"@esbuild/android-arm64","darwin arm64 LE":"@esbuild/darwin-arm64","darwin x64 LE":"@esbuild/darwin-x64","freebsd arm64 LE":"@esbuild/freebsd-arm64","freebsd x64 LE":"@esbuild/freebsd-x64","linux arm LE":"@esbuild/linux-arm","linux arm64 LE":"@esbuild/linux-arm64","linux ia32 LE":"@esbuild/linux-ia32","linux mips64el LE":"@esbuild/linux-mips64el","linux ppc64 LE":"@esbuild/linux-ppc64","linux riscv64 LE":"@esbuild/linux-riscv64","linux s390x BE":"@esbuild/linux-s390x","linux x64 LE":"@esbuild/linux-x64","linux loong64 LE":"@esbuild/linux-loong64","netbsd x64 LE":"@esbuild/netbsd-x64","openbsd x64 LE":"@esbuild/openbsd-x64","sunos x64 LE":"@esbuild/sunos-x64"};var $={"android arm LE":"@esbuild/android-arm","android x64 LE":"@esbuild/android-x64"};function pkgAndSubpathForCurrentPlatform(){let e;let t;let r=false;let n=`${process.platform} ${y.arch()} ${y.endianness()}`;if(n in k){e=k[n];t="esbuild.exe"}else if(n in E){e=E[n];t="bin/esbuild"}else if(n in $){e=$[n];t="bin/esbuild";r=true}else{throw new Error(`Unsupported platform: ${n}`)}return{pkg:e,subpath:t,isWASM:r}}function pkgForSomeOtherPlatform(){const e=665;const t=v.dirname(v.dirname(v.dirname(e)));if(v.basename(t)==="node_modules"){for(const e in E){try{const r=E[e];if(w.existsSync(v.join(t,r)))return r}catch{}}for(const e in k){try{const r=k[e];if(w.existsSync(v.join(t,r)))return r}catch{}}}return null}function downloadedBinPath(e,t){const r=v.dirname(665);return v.join(r,`downloaded-${e.replace("/","-")}-${v.basename(t)}`)}function generateBinPath(){if(isValidBinaryPath(b)){if(!w.existsSync(b)){console.warn(`[esbuild] Ignoring bad configuration: ESBUILD_BINARY_PATH=${b}`)}else{return{binPath:b,isWASM:false}}}const{pkg:e,subpath:t,isWASM:n}=pkgAndSubpathForCurrentPlatform();let l;try{l=require.resolve(`${e}/${t}`)}catch(r){l=downloadedBinPath(e,t);if(!w.existsSync(l)){try{require.resolve(e)}catch{const t=pkgForSomeOtherPlatform();if(t){let r=`\nSpecifically the "${t}" package is present but this platform\nneeds the "${e}" package instead. People often get into this\nsituation by installing esbuild on Windows or macOS and copying "node_modules"\ninto a Docker image that runs Linux, or by copying "node_modules" between\nWindows and WSL environments.\n\nIf you are installing with npm, you can try not copying the "node_modules"\ndirectory when you copy the files over, and running "npm ci" or "npm install"\non the destination platform after the copy. Or you could consider using yarn\ninstead of npm which has built-in support for installing a package on multiple\nplatforms simultaneously.\n\nIf you are installing with yarn, you can try listing both this platform and the\nother platform in your ".yarnrc.yml" file using the "supportedArchitectures"\nfeature: https://yarnpkg.com/configuration/yarnrc/#supportedArchitectures\nKeep in mind that this means multiple copies of esbuild will be present.\n`;if(e===x&&t===F||e===F&&t===x){r=`\nSpecifically the "${t}" package is present but this platform\nneeds the "${e}" package instead. People often get into this\nsituation by installing esbuild with npm running inside of Rosetta 2 and then\ntrying to use it with node running outside of Rosetta 2, or vice versa (Rosetta\n2 is Apple's on-the-fly x86_64-to-arm64 translation service).\n\nIf you are installing with npm, you can try ensuring that both npm and node are\nnot running under Rosetta 2 and then reinstalling esbuild. This likely involves\nchanging how you installed npm and/or node. For example, installing node with\nthe universal installer here should work: https://nodejs.org/en/download/. Or\nyou could consider using yarn instead of npm which has built-in support for\ninstalling a package on multiple platforms simultaneously.\n\nIf you are installing with yarn, you can try listing both "arm64" and "x64"\nin your ".yarnrc.yml" file using the "supportedArchitectures" feature:\nhttps://yarnpkg.com/configuration/yarnrc/#supportedArchitectures\nKeep in mind that this means multiple copies of esbuild will be present.\n`}throw new Error(`\nYou installed esbuild for another platform than the one you're currently using.\nThis won't work because esbuild is written with native code and needs to\ninstall a platform-specific binary executable.\n${r}\nAnother alternative is to use the "esbuild-wasm" package instead, which works\nthe same way on all platforms. But it comes with a heavy performance cost and\ncan sometimes be 10x slower than the "esbuild" package, so you may also not\nwant to do that.\n`)}throw new Error(`The package "${e}" could not be found, and is needed by esbuild.\n\nIf you are installing esbuild with npm, make sure that you don't specify the\n"--no-optional" or "--omit=optional" flags. The "optionalDependencies" feature\nof "package.json" is used by esbuild to install the correct binary executable\nfor your current platform.`)}throw r}}if(/\.zip\//.test(l)){let a;try{a=r(125)}catch(e){}if(a){const r=a.getPackageInformation(a.topLevel).packageLocation;const i=v.join(r,"node_modules",".cache","esbuild",`pnpapi-${e.replace("/","-")}-${"0.17.19"}-${v.basename(t)}`);if(!w.existsSync(i)){w.mkdirSync(v.dirname(i),{recursive:true});w.copyFileSync(l,i);w.chmodSync(i,493)}return{binPath:i,isWASM:n}}}return{binPath:l,isWASM:n}}var S=r(81);var I=r(113);var M=r(17);var A=r(147);var C=r(37);var j=r(224);var L;if(process.env.ESBUILD_WORKER_THREADS!=="0"){try{L=r(267)}catch{}let[e,t]=process.versions.node.split(".");if(+e<12||+e===12&&+t<17||+e===13&&+t<13){L=void 0}}var O;var P=((O=L==null?void 0:L.workerData)==null?void 0:O.esbuildVersion)==="0.17.19";var esbuildCommandAndArgs=()=>{if((!b||false)&&(M.basename(__filename)!=="main.js"||M.basename(__dirname)!=="lib")){throw new Error(`The esbuild JavaScript API cannot be bundled. Please mark the "esbuild" package as external so it's not included in the bundle.\n\nMore information: The file containing the code for esbuild's JavaScript API (${__filename}) does not appear to be inside the esbuild package on the file system, which usually means that the esbuild package was bundled into another file. This is problematic because the API needs to run a binary executable inside the esbuild package which is located using a relative path from the API code to the executable. If the esbuild package is bundled, the relative path will be incorrect and the executable won't be found.`)}if(false){}else{const{binPath:e,isWASM:t}=generateBinPath();if(t){return["node",[e]]}else{return[e,[]]}}};var isTTY=()=>j.isatty(2);var D={readFile(e,t){try{let r=A.readFileSync(e,"utf8");try{A.unlinkSync(e)}catch{}t(null,r)}catch(e){t(e,null)}},writeFile(e,t){try{let r=randomFileName();A.writeFileSync(r,e);t(r)}catch{t(null)}}};var _={readFile(e,t){try{A.readFile(e,"utf8",((r,n)=>{try{A.unlink(e,(()=>t(r,n)))}catch{t(r,n)}}))}catch(e){t(e,null)}},writeFile(e,t){try{let r=randomFileName();A.writeFile(r,e,(e=>e!==null?t(null):t(r)))}catch{t(null)}}};var T="0.17.19";var build=e=>ensureServiceIsRunning().build(e);var context=e=>ensureServiceIsRunning().context(e);var transform=(e,t)=>ensureServiceIsRunning().transform(e,t);var formatMessages=(e,t)=>ensureServiceIsRunning().formatMessages(e,t);var analyzeMetafile=(e,t)=>ensureServiceIsRunning().analyzeMetafile(e,t);var buildSync=e=>{if(L&&!P){if(!W)W=startWorkerThreadService(L);return W.buildSync(e)}let t;runServiceSync((r=>r.buildOrContext({callName:"buildSync",refs:null,options:e,isTTY:isTTY(),defaultWD:R,callback:(e,r)=>{if(e)throw e;t=r}})));return t};var transformSync=(e,t)=>{if(L&&!P){if(!W)W=startWorkerThreadService(L);return W.transformSync(e,t)}let r;runServiceSync((n=>n.transform({callName:"transformSync",refs:null,input:e,options:t||{},isTTY:isTTY(),fs:D,callback:(e,t)=>{if(e)throw e;r=t}})));return r};var formatMessagesSync=(e,t)=>{if(L&&!P){if(!W)W=startWorkerThreadService(L);return W.formatMessagesSync(e,t)}let r;runServiceSync((n=>n.formatMessages({callName:"formatMessagesSync",refs:null,messages:e,options:t,callback:(e,t)=>{if(e)throw e;r=t}})));return r};var analyzeMetafileSync=(e,t)=>{if(L&&!P){if(!W)W=startWorkerThreadService(L);return W.analyzeMetafileSync(e,t)}let r;runServiceSync((n=>n.analyzeMetafile({callName:"analyzeMetafileSync",refs:null,metafile:typeof e==="string"?e:JSON.stringify(e),options:t,callback:(e,t)=>{if(e)throw e;r=t}})));return r};var N=false;var initialize=e=>{e=validateInitializeOptions(e||{});if(e.wasmURL)throw new Error(`The "wasmURL" option only works in the browser`);if(e.wasmModule)throw new Error(`The "wasmModule" option only works in the browser`);if(e.worker)throw new Error(`The "worker" option only works in the browser`);if(N)throw new Error('Cannot call "initialize" more than once');ensureServiceIsRunning();N=true;return Promise.resolve()};var R=process.cwd();var z;var ensureServiceIsRunning=()=>{if(z)return z;let[e,t]=esbuildCommandAndArgs();let r=S.spawn(e,t.concat(`--service=${"0.17.19"}`,"--ping"),{windowsHide:true,stdio:["pipe","pipe","inherit"],cwd:R});let{readFromStdout:n,afterClose:l,service:a}=createChannel({writeToStdin(e){r.stdin.write(e,(e=>{if(e)l(e)}))},readFileSync:A.readFileSync,isSync:false,hasFS:true,esbuild:u});r.stdin.on("error",l);r.on("error",l);const i=r.stdin;const o=r.stdout;o.on("data",n);o.on("end",l);let s=0;r.unref();if(i.unref){i.unref()}if(o.unref){o.unref()}const c={ref(){if(++s===1)r.ref()},unref(){if(--s===0)r.unref()}};z={build:e=>new Promise(((t,r)=>{a.buildOrContext({callName:"build",refs:c,options:e,isTTY:isTTY(),defaultWD:R,callback:(e,n)=>e?r(e):t(n)})})),context:e=>new Promise(((t,r)=>a.buildOrContext({callName:"context",refs:c,options:e,isTTY:isTTY(),defaultWD:R,callback:(e,n)=>e?r(e):t(n)}))),transform:(e,t)=>new Promise(((r,n)=>a.transform({callName:"transform",refs:c,input:e,options:t||{},isTTY:isTTY(),fs:_,callback:(e,t)=>e?n(e):r(t)}))),formatMessages:(e,t)=>new Promise(((r,n)=>a.formatMessages({callName:"formatMessages",refs:c,messages:e,options:t,callback:(e,t)=>e?n(e):r(t)}))),analyzeMetafile:(e,t)=>new Promise(((r,n)=>a.analyzeMetafile({callName:"analyzeMetafile",refs:c,metafile:typeof e==="string"?e:JSON.stringify(e),options:t,callback:(e,t)=>e?n(e):r(t)})))};return z};var runServiceSync=e=>{let[t,r]=esbuildCommandAndArgs();let n=new Uint8Array;let{readFromStdout:l,afterClose:a,service:i}=createChannel({writeToStdin(e){if(n.length!==0)throw new Error("Must run at most one command");n=e},isSync:true,hasFS:true,esbuild:u});e(i);let o=S.execFileSync(t,r.concat(`--service=${"0.17.19"}`),{cwd:R,windowsHide:true,input:n,maxBuffer:+process.env.ESBUILD_MAX_BUFFER||16*1024*1024});l(o);a(null)};var randomFileName=()=>M.join(C.tmpdir(),`esbuild-${I.randomBytes(32).toString("hex")}`);var W=null;var startWorkerThreadService=e=>{let{port1:t,port2:r}=new e.MessageChannel;let n=new e.Worker(__filename,{workerData:{workerPort:r,defaultWD:R,esbuildVersion:"0.17.19"},transferList:[r],execArgv:[]});let l=0;let fakeBuildError=e=>{let t=new Error(`Build failed with 1 error:\nerror: ${e}`);let r=[{id:"",pluginName:"",text:e,location:null,notes:[],detail:void 0}];t.errors=r;t.warnings=[];return t};let validateBuildSyncOptions=e=>{if(!e)return;let t=e.plugins;if(t&&t.length>0)throw fakeBuildError(`Cannot use plugins in synchronous API calls`)};let applyProperties=(e,t)=>{for(let r in t){e[r]=t[r]}};let runCallSync=(r,a)=>{let i=l++;let o=new SharedArrayBuffer(8);let s=new Int32Array(o);let u={sharedBuffer:o,id:i,command:r,args:a};n.postMessage(u);let c=Atomics.wait(s,0,0);if(c!=="ok"&&c!=="not-equal")throw new Error("Internal error: Atomics.wait() failed: "+c);let{message:{id:f,resolve:g,reject:d,properties:p}}=e.receiveMessageOnPort(t);if(i!==f)throw new Error(`Internal error: Expected id ${i} but got id ${f}`);if(d){applyProperties(d,p);throw d}return g};n.unref();return{buildSync(e){validateBuildSyncOptions(e);return runCallSync("build",[e])},transformSync(e,t){return runCallSync("transform",[e,t])},formatMessagesSync(e,t){return runCallSync("formatMessages",[e,t])},analyzeMetafileSync(e,t){return runCallSync("analyzeMetafile",[e,t])}}};var startSyncServiceWorker=()=>{let e=L.workerData.workerPort;let t=L.parentPort;let extractProperties=e=>{let t={};if(e&&typeof e==="object"){for(let r in e){t[r]=e[r]}}return t};try{let r=ensureServiceIsRunning();R=L.workerData.defaultWD;t.on("message",(t=>{(async()=>{let{sharedBuffer:n,id:l,command:a,args:i}=t;let o=new Int32Array(n);try{switch(a){case"build":e.postMessage({id:l,resolve:await r.build(i[0])});break;case"transform":e.postMessage({id:l,resolve:await r.transform(i[0],i[1])});break;case"formatMessages":e.postMessage({id:l,resolve:await r.formatMessages(i[0],i[1])});break;case"analyzeMetafile":e.postMessage({id:l,resolve:await r.analyzeMetafile(i[0],i[1])});break;default:throw new Error(`Invalid command: ${a}`)}}catch(t){e.postMessage({id:l,reject:t,properties:extractProperties(t)})}Atomics.add(o,0,1);Atomics.notify(o,0,Infinity)})()}))}catch(r){t.on("message",(t=>{let{sharedBuffer:n,id:l}=t;let a=new Int32Array(n);e.postMessage({id:l,reject:r,properties:extractProperties(r)});Atomics.add(a,0,1);Atomics.notify(a,0,Infinity)}))}};if(P){startSyncServiceWorker()}var U=u;0&&0},665:function(e){e.exports=require("@vg-code/cli/compiled/esbuild")},81:function(e){e.exports=require("child_process")},113:function(e){e.exports=require("crypto")},147:function(e){e.exports=require("fs")},37:function(e){e.exports=require("os")},17:function(e){e.exports=require("path")},125:function(e){e.exports=require("pnpapi")},224:function(e){e.exports=require("tty")},267:function(e){e.exports=require("worker_threads")}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var l=t[r]={exports:{}};var a=true;try{e[r](l,l.exports,__nccwpck_require__);a=false}finally{if(a)delete t[r]}return l.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var r=__nccwpck_require__(625);module.exports=r})();